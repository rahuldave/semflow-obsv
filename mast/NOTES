
Notes and questions on converting the MAST obscore table to use the
ADS ontologies.

*) Input row:

dataproduct_type     : Spectrum.1D
spectralsi           : 1.0E-10 L
fluxsi               : 1.0E+7 ML-1T-3
equinox              : 2000
s_ra                 : 350.46190000000001
em_max               : 8.9544800000000001E-8
target_name          : HD 220172
spec_bw              : 237.06
obs_publisher_did    : ivo://orfeus.mast/befs1001_spc1
spec_fil             : 1
creation_date        : 1999-09-15 22:41:38
max_error            : 3.8441099999999999E-12
fluxcal              : ABSOLUTE
s_ra_max             : 350.46467777800001
min_error            : 0
max_flux             : 9.5153800000000002E-12
t_max                : 49244.371967589999
access_estsize       : 276
em_domain            : Extreme-UV
telescope_name       : ORFEUS
dec_targ             : -9.7613900000000005
t_min                : 49244.349965280002
t_resolution         : 1397
spectralaxisname     : WAVE
specsys              : HELIOCEN
dssource             : POINTED
fluxaxisname         : FLUX
fluxmax2             : 3.6475099999999997E-12
obs_id               : befs1001_spc1
instrument           : BEFS
s_region             : Circle J2000 350.4619 -9.76139 0.00277777777778
version              : 1.0
fluxucd              : phot.flux.density;em.wl
vover                : 1.0
aperture             : 20
spec_val             : 776.91800000000001
preview              : 
s_dec_max            : -9.75861222222
filesize             : 275.625
o_fluxucd            : phot.flux
fluxavg              : 6.4075399999999996E-13
vodate               : 2008-02-29 00:00:00
em_res_power         : 10000
access_format        : fits
tmid                 : 49244.360966439999
coord_obs            : 350.46190     -9.76139
radecsys             : FK5
calib_level          : 2
s_dec_min            : -9.7641677777799991
s_resolution         : 20
representative       : 
t_span               : 2.2002309997333214E-2
obs_collection       : ORFEUS/BEFS
ra_targ              : 350.46190000000001
s_ra_min             : 350.45912222200002
timesys              : UTC
min_flux             : -2.2243300000000001E-12
date_obs             : 1993-09-14 08:23:57
t_exptime            : 1397
s_fov                : 5.5555555555600001E-3
title                : befs1001_spc1, HD 220172
der_snr              : 0.52000000000000002
spectralunit         : angstrom
coord_targ           : 350.46190000  -9.76139000
project              : 
datalen              : 22000
s_dec                : -9.7613900000000005
fluxunit             : erg/cm**2/s/angstrom
em_min               : 6.5838800000000001E-8
access_url           : http://archive.stsci.edu/pub/vospectra/befs2/befs1001_spc1_vo.fits
obs_creator_name     : BEFS project

*) Output N3:

This has not yet been updated with the latest conversion

@prefix adsbase: <https://github.com/rahuldave/ontoads/raw/master/owl/ADS-Base.owl#> .
@prefix adsobsv: <https://github.com/rahuldave/ontoads/raw/master/owl/ADS-obsv.owl#> .
@prefix agent: <http://swan.mindinformatics.org/ontologies/1.2/agents/> .
@prefix uri_conf: <http://ads.harvard.edu/sem/conf#> .
@prefix uri_dat: <http://ads.harvard.edu/sem/obsv/dat#> .
@prefix uri_obs: <http://ads.harvard.edu/sem/obsv/obs#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

uri_dat:MAST_befs1001_spc1 a adsobsv:Datum;
    adsbase:dataType "Spectrum.1D";
    adsobsv:calibLevel 2;
    adsobsv:createdOn "1999-09-15T22:41:38"^^xsd:dateTime;
    adsobsv:dataProductId "befs1001_spc1";
    adsobsv:dataURL "http://archive.stsci.edu/pub/vospectra/befs2/befs1001_spc1_vo.fits";
    adsobsv:forObservation uri_obs:MAST_befs1001_spc1;
    adsobsv:fromDataCollection [ a adsobsv:DataCollection;
            adsbase:title "ORFEUS/BEFS" ];
    adsobsv:wavelengthEnd 8.95448e-08;
    adsobsv:wavelengthStart 6.58388e-08 .

uri_obs:MAST_befs1001_spc1 a adsobsv:Observation;
    adsbase:atTime "1993-09-14T08:23:57"^^xsd:dateTime;
    adsbase:usingInstrument uri_conf:INSTRUMENT_MAST_BEFS;
    adsobsv:associatedFootprint [ a adsobsv:RegionOfSky;
            adsobsv:fov "Circle J2000 350.4619 -9.76139 0.00277777777778";
            adsobsv:resolution 20.0 ];
    adsobsv:associatedPosition [ a adsobsv:Pointing;
            adsobsv:dec -9.76139;
            adsobsv:ra 350.4619 ];
    adsobsv:atTelescope uri_conf:TELESCOPE_MAST_ORFEUS;
    adsobsv:hasDataProduct uri_dat:MAST_befs1001_spc1;
    adsobsv:observationId "befs1001_spc1";
    adsobsv:observationMadeBy [ a agent:PersonName;
            agent:fullName "BEFS project" ];
    adsobsv:observedTime 1397.0;
    adsobsv:tExptime 1397.0;
    adsobsv:target [ a adsobsv:AstronomicalSource;
            adsbase:title "HD 220172" ] .

*) Questions and comments

**) Positions

Which cells to use? From one row we have:

  s_ra                 : 350.46190000000001
  s_dec                : -9.7613900000000005
  s_ra_min             : 350.45912222200002
  s_ra_max             : 350.46467777800001
  s_dec_min            : -9.7641677777799991
  s_dec_max            : -9.75861222222

as well as

  ra_targ              : 350.46190000000001
  dec_targ             : -9.7613900000000005
  coord_targ           : 350.46190000  -9.76139000
  coord_obs            : 350.46190     -9.76139

I selected s_ra and s_dec for adsobsv.ra/dec. Do we want to encode
any of the other values? The s_ra/dec_min/max values should probably
be saved, but I am not sure if the other values are worth keeping.
For this example they are essentially the same. and it's not clear whether
it is useful to store them if they are different (unless we want to associate
the target coordinates to the target itself for some reason, perhaps for
identification against some other data store).

Note: obscore defines s_ra/dec to be in degrees.

I have taken s_region and created a FootPrint node; namely

  s_region             : Circle J2000 350.4619 -9.76139 0.00277777777778

gets an anonymous node of type adsobsv.FootPrint with this as its
adsobsv.s_region.

**) Units and ancillary data

Howe do we encode the units and coord. system info for coordinates,
times and other axes (not that the current modelling really does anything with
the other axes at present).

For instance we have

  equinox              : 2000
  radecsys             : FK5
  s_resolution         : 20
  timesys              : UTC

Note: obscore defines s_resolution to be in arcsec (and gives the FWHM of the data).

Note: obscore seems to mandate ICRS for s_ra/dec, although the working draft version
of December 8 2010 in unclear whether they have to be ICRS or default to ICRS.

The observation resolution is now a property of the observation rather
than the footprint (since the domain restriction of the
adsobsv.resolution predicate has been removed).

**) Dates

We have

  creation_date        : 1999-09-15 22:41:38
  vodate               : 2008-02-29 00:00:00
  date_obs             : 1993-09-14 08:23:57

creation_date is used as the object for the pav.createdOn predicate and
date_obs is used for adsbase.atTime for the data and observation objects
respectively; vodate is currently unused.

Should the t_min/max fields - which are in MJD - be converted to

  t_min                : 49244.349965280002
  t_max                : 49244.371967589999

adsbase.fromTime/toTime? If so, how do we indicate units. Hmm, the domains of
these predicates are xsd:dateTime, so that means we need to convert from MJD
if we do add these predicates.

What to do with?

  t_resolution         : 1397

This has units of seconds. Doh, there's an obsv.tResolution predicate which
we now use, but how do we define the units?

  t_span               : 2.2002309997333214E-2

The exposure time, in seconds - namely

  t_exptime            : 1397

is currently mapped to both adsobsv.observedTime and adsobsv.tExptime. Do 
we need both?

**) Wavelengths

  em_domain            : Extreme-UV
  em_min               : 6.5838800000000001E-8
  em_max               : 8.9544800000000001E-8
  em_res_power         : 10000

At present em_min/max are mapped to adsobsv.wavelengthStart/End predicates,
but what are the units? ObsCore requires that these values are wavelengths
in units of meters.

em_domain is meant to be an enumerated type from

  http://www.ivoa.net/Documents/latest/VODataService/

Presumably they mean

  http://www.ivoa.net/Documents/VODataService/

and it does list a set

RADIO, MILLIMETER, INFRARED, OPTICAL, UV, EUV, X-RAY, GAMMA-RAY

which doesn't quite map to the values found from MAST.

An analysis of the full MAST dataset shows the domains

  Extreme-UV
  Far-UV
  Near-UV
  Near-IR
  
are used. Checking the em_min/max fields against the VODataService
recommended values I get (where 'input domain' refers to the EM_DOMAIN
cell value of a row from MAST):

The following re-mappings are needed:
 Input domain: OPTICAL,NEAR-IR
  -> OPTICAL  (307 times)
  -> OPTICAL,INFRARED  (2270 times)

 Input domain: FAR-UV
  -> EUV  (676 times)
  -> UV  (55357 times)
  -> EUV,UV  (196 times)

 Input domain: FAR-UV,NEAR-UV
  -> UV,OPTICAL  (34424 times)
  -> UV  (2414 times)

 Input domain: EXTREME-UV,FAR-UV,NEAR-UV
  -> EUV,UV  (632 times)

 Input domain: X-RAY,EXTREME-UV,FAR-UV,NEAR-UV,OPTICAL,NEAR-IR
  -> GAMMA-RAY,X-RAY,EUV,UV,OPTICAL  (75 times)

 Input domain: NEAR-UV,OPTICAL,NEAR-IR
  -> UV,OPTICAL  (18 times)
  -> OPTICAL  (1538 times)

 Input domain: NEAR-UV,OPTICAL
  -> OPTICAL  (946 times)
  -> UV,OPTICAL  (2347 times)

 Input domain: EXTREME-UV,FAR-UV,NEAR-UV,OPTICAL,NEAR-IR
  -> EUV,UV,OPTICAL  (478 times)

 Input domain: EXTREME-UV
  -> EUV  (451 times)

 Input domain: FAR-UV,NEAR-UV,OPTICAL,NEAR-IR
  -> EUV,UV,OPTICAL  (20 times)
  -> UV,OPTICAL  (928 times)

 Input domain: X-RAY,EXTREME-UV
  -> X-RAY,EUV  (1326 times)

 Input domain: NEAR-IR
  -> INFRARED  (8 times)
  -> OPTICAL  (625 times)
  -> OPTICAL,INFRARED  (29 times)

 Input domain: EXTREME-UV,FAR-UV
  -> EUV  (96 times)
  -> EUV,UV  (7999 times)

 Input domain: NEAR-UV
  -> UV,OPTICAL  (2450 times)
  -> OPTICAL  (463 times)
  -> UV  (6207 times)

 Input domain: X-RAY,EXTREME-UV,FAR-UV,NEAR-UV
  -> X-RAY,EUV,UV  (754 times)

 Input domain: FAR-UV,NEAR-UV,OPTICAL
  -> UV,OPTICAL  (40 times)

So have decided to re-create the EM_DOMAIN field based on the
input em_min/max values.

**) Target information

We have

  target_name          : HD 220172
  title                : befs1001_spc1, HD 220172

so how do we encode these? 

The title is linked to the observation using the adsbase.title
predicate.

The target name is used to create a URI which is then linked to the
observation via the adsobsv.target predicate and is made an instance
of the adsobsv.AstronomicalSourceName class. This allows for multiple
sources with the same name, or for differences in spelling (but these
would have to be sorted out or fixed downstream by adding further
triples).

**) Observer and Collection

I now create URIs for an observer, mapped to the obs_creator_name
cell, and an observation collection, mapped to the obs_collection
cell. 

It is not obvious that obs_creator_name really maps to the
range of adsobsv.observationMadeBy.

The choice of URI for obs_collection needs work since the obs_collection
call may contain an IVOA identifier, which would mean it would make
sense to use this - or at least have a better way of encoding this.

**) URL

Should adsobsv.dataURL range be a literal or be a URI? It seems
pointless to have a URI as a literal.

**) Enumerations

Probably want some enumerations for fields like

  dataproduct_type     : Spectrum.1D

The ObsCore documentation has the value for this field being a
"."-separated list, in lower case, with the base/start level being
one of: image, spectrym, timeseries, visibility, eventlist, cube.

It appears that all the MAST products are 1D spectra, since all rows
have a value of Spectrum.1D.

Although calib_level is an enumeration, may just be worth leaving as
an integer, with constraints on the predicate/ontology? Note that
adsobsv has an integer constraint on the range of the calibLevel predicate.

**) Axes

I have not looked at the axes yet.

**) Observation vs SimpleObservation

I use adsobsv.Observation rather than adsobsv.SimpleObservation since
it is not clear to me that we can assume that the SimpleObservation
restriction is valid here.

--- END ---

spectralsi           : 1.0E-10 L
fluxsi               : 1.0E+7 ML-1T-3
spec_bw              : 237.06
obs_publisher_did    : ivo://orfeus.mast/befs1001_spc1
spec_fil             : 1
max_error            : 3.8441099999999999E-12
fluxcal              : ABSOLUTE
min_error            : 0
max_flux             : 9.5153800000000002E-12
access_estsize       : 276
telescope_name       : ORFEUS
spectralaxisname     : WAVE
specsys              : HELIOCEN
dssource             : POINTED
fluxaxisname         : FLUX
fluxmax2             : 3.6475099999999997E-12
obs_id               : befs1001_spc1
instrument           : BEFS
version              : 1.0
fluxucd              : phot.flux.density;em.wl
vover                : 1.0
aperture             : 20
spec_val             : 776.91800000000001
preview              : 
filesize             : 275.625
o_fluxucd            : phot.flux
fluxavg              : 6.4075399999999996E-13
access_format        : fits
tmid                 : 49244.360966439999
calib_level          : 2
s_resolution         : 20
representative       : 
min_flux             : -2.2243300000000001E-12
s_fov                : 5.5555555555600001E-3
der_snr              : 0.52000000000000002
spectralunit         : angstrom
project              : 
datalen              : 22000
fluxunit             : erg/cm**2/s/angstrom
access_url           : http://archive.stsci.edu/pub/vospectra/befs2/befs1001_spc1_vo.fits

CHANGES - 2011/03/03

- associatedFootprint predicate now links to a bnode which is a FootPrint and not RegionOfSky

- changed from adsobsv.fov to adsobsv.s_region for linkink a FootPrint to a ADQL
  description of the region

- the adsobsv.resolution predicate has been moved to the observation rather than the FootPrint
  (the domain restriction of Footprint has been removed)

- corrected to pav.createdOn since it isn't in adsobsv (docs above also thought atTime as part
  of asdobsv but code used correct namespace)

- added use of adsobsv.tResolution to store the t_resolution field.

- link to the target using adsbase.name rather than creating an anonymous node
  via the adsobsv.target predicate.

- wavelengthSAtart/End moved from the data to the observaion.

- added URIs rather than bnodes for the objects of adsobsv.observationMadeBy
  and adsobsv.fromDataCollection.

- use wavelengthDomain to link to the em_domain field; note that I have changed the
  predicate to remove the range restriction since I want to use an enumerated type
  for the records, and not just a string.

